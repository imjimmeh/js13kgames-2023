"use strict";(()=>{var i=class{constructor({name:t}){this.name=t}};var m=class extends i{constructor({r:n,g:o,b:r,a:v}){super({name:"Colour"});this.toRgb=()=>`rgb(${this.r}, ${this.g}, ${this.b}, ${this.a})`;this.r=n,this.g=o,this.b=r,this.a=v,this.toRgb=this.toRgb.bind(this)}};var a=class extends i{constructor({x:n,y:o}){super({name:"Position"});this.x=n??0,this.y=o??0}};var c=class extends i{constructor({width:n,height:o}){super({name:"Size"});this.width=n,this.height=o}};function*x(){yield new m({r:255,g:0,b:0,a:255}),yield new a({x:0,y:0}),yield new c({width:200,height:200})}var s=class{getAcceptedEntities(t){return C(t,this)}},C=function*(e,t){for(let n of e)t.accepts(n)&&(yield n)};var p=class extends s{accepts(t){return t.components.has("Position")}init(){}update({entities:t,systems:n}){for(let o of this.getAcceptedEntities(t)){let r=o.components.get("Position");r.x+=1,r.y-=1}}};var y=class{constructor(){let t=document.querySelector("canvas");if(!t)throw"Could not find canvas";this._canvas=t,this._context=this._canvas.getContext("2d")}get canvas(){return this._canvas}get context(){return this._context}clearCanvas(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}},h=new y;var E=e=>{let t=e.components.get("Size"),n=e.components.get("Position"),o=e.components.get("Colour");h.context.fillStyle=o.toRgb(),h.context.fillRect(n.x,n.y,t.width,t.height)},l=class extends s{accepts(t){return t.components.has("Size")&&t.components.has("Position")&&t.components.has("Colour")}init(){}update({entities:t,systems:n}){h.clearCanvas();for(let o of this.getAcceptedEntities(t))E(o)}};var u=class{constructor(){this.systems=[];this.entities=[];this.update=this.update.bind(this)}init(){for(let t of this.entities)t.init();for(let t of this.systems)t.init();window.requestAnimationFrame(this.update)}update(){for(let t of this.systems)t.update({entities:this.entities,systems:this.systems});console.log("ran update"),window.requestAnimationFrame(this.update)}};var d=class{constructor(){this.components=new Map}add(t){this.components.set(t.name,t)}get(t){let n=this.components.get(t);if(n)return n}has(t){return this.components.has(t)}all(){return this.components.values()}};var f=class{constructor(){this.components=new d;this.name=""}init(){for(let t of this.components.all());console.log("initialised",this)}};var b=new f;b.name="Player";for(let e of x())b.components.add(e);var g=new u;g.entities.push(b);g.systems.push(new p);g.systems.push(new l);g.init();})();
//# sourceMappingURL=app.js.map
