"use strict";(()=>{var i=class{constructor({name:t}){this.name=t}};var d=class extends i{constructor(e){super({name:"ControlledBy"});this.controlledBy=e}};var V=(o,t,e)=>(o+(t-o))*e,p=o=>o<1e-5&&o>-1e-5;var R=(o,t,e)=>{let n=V(o.x,t.x,e),s=V(o.y,t.y,e);return{x:n,y:s}},I=(o,t)=>({x:o.x+t.x,y:o.y+t.y}),K=(o,t)=>({x:o.x*t,y:o.y*t}),A=({x:o,y:t})=>p(o)&&p(t);var m="Movement",u=class extends i{constructor({vector:e,maxSpeed:n}){super({name:m});this.acceleration={x:0,y:0};this.velocity={x:0,y:0};this.vector=e??{x:0,y:0},this.maxSpeed=n??2}updateSpeed(){if(p(this.vector.x)&&(this.velocity.x=0,this.acceleration.x=0),p(this.vector.y)&&(this.velocity.y=0,this.acceleration.y=0),A(this.vector))return;this.acceleration=I(this.acceleration,K(this.vector,.1)),this.velocity=R(this.velocity,I(this.velocity,this.acceleration),1);let e=this.maxSpeed*-1;this.velocity.x>this.maxSpeed?this.velocity.x=this.maxSpeed:this.velocity.x<e&&(this.velocity.x=e),this.velocity.y>this.maxSpeed?this.velocity.y=this.maxSpeed:this.velocity.y<e&&(this.velocity.y=e)}};var x=class extends i{constructor({r:e,g:n,b:s,a:r}){super({name:"Colour"});this.toRgb=()=>`rgb(${this.r}, ${this.g}, ${this.b}, ${this.a})`;this.r=e,this.g=n,this.b=s,this.a=r,this.toRgb=this.toRgb.bind(this)}};var a="Position",f=class extends i{constructor({x:e,y:n}){super({name:a});this.x=e??0,this.y=n??0}};var g=class extends i{constructor({width:e,height:n}){super({name:"Size"});this.width=e,this.height=n}};function*k(){yield new x({r:255,g:0,b:0,a:255}),yield new f({x:0,y:0}),yield new g({width:200,height:200})}var c=class{getAcceptedEntities(t){return z(t,this)}},z=function*(o,t){for(let e of o)t.accepts(e)&&(yield e)};var v=class extends c{constructor(){super();this.keyStates=new Map;this.init=this.init.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this)}accepts(e){let n=e.components.get("ControlledBy");return n?n.controlledBy=="Player"&&e.components.has(m):!1}init(){document.addEventListener("keydown",this.onKeyDown),document.addEventListener("keyup",this.onKeyUp)}update({entities:e}){for(let r of this.keyStates)r[1]=="Pressed"&&this.keyStates.set(r[0],"Held");let n=this.getAxisVector("ArrowLeft","ArrowRight"),s=this.getAxisVector("ArrowUp","ArrowDown");for(let r of this.getAcceptedEntities(e)){let P=r.components.get(m);P.vector.y=s,P.vector.x=n}}getAxisVector(e,n){let s=(this.keyStates.get(e)??"Released")!="Released"?1:0,r=(this.keyStates.get(n)??"Released")!="Released"?-1:0;return s+r}onKeyDown(e){this.keyStates.set(e.key,"Pressed")}onKeyUp(e){this.keyStates.set(e.key,"Released")}};var b=class extends c{accepts(t){return t.components.has(a)&&t.components.has(m)}init(){}update({entities:t}){for(let e of this.getAcceptedEntities(t)){let n=e.components.get(a),s=e.components.get(m);s.updateSpeed(),n.x+=s.acceleration.x,n.y+=s.acceleration.y}}};var M=class{constructor(){let t=document.querySelector("canvas");if(!t)throw"Could not find canvas";this._canvas=t,this._context=this._canvas.getContext("2d")}get canvas(){return this._canvas}get context(){return this._context}init(){this._canvas.width=window.innerWidth,this._canvas.height=window.innerHeight}clearCanvas(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}},l=new M;var D=o=>{let t=o.components.get("Size"),e=o.components.get(a),n=o.components.get("Colour");l.context.fillStyle=n.toRgb(),l.context.fillRect(e.x,e.y,t.width,t.height)},w=class extends c{accepts(t){return t.components.has("Size")&&t.components.has(a)&&t.components.has("Colour")}init(){}update({entities:t}){l.clearCanvas();for(let e of this.getAcceptedEntities(t))D(e)}};var C=class{constructor(){this.systems=[];this.entities=[];this.update=this.update.bind(this)}init(){l.init();for(let t of this.entities)t.init();for(let t of this.systems)t.init();window.requestAnimationFrame(this.update)}update(){for(let t of this.systems)t.update({entities:this.entities,systems:this.systems});console.log("ran update"),window.requestAnimationFrame(this.update)}};var S=class{constructor(){this.components=new Map}add(t){this.components.set(t.name,t)}get(t){let e=this.components.get(t);if(e)return e}has(t){return this.components.has(t)}all(){return this.components.values()}};var E=class{constructor(){this.components=new S;this.name=""}init(){for(let t of this.components.all())console.log(t);console.log("initialised",this)}};var h=new E;h.name="Player";for(let o of k())h.components.add(o);h.components.add(new u({}));h.components.add(new d("Player"));var y=new C;y.entities.push(h);y.systems.push(new v);y.systems.push(new b);y.systems.push(new w);y.init();})();
//# sourceMappingURL=game.js.map
