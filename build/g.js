"use strict";(()=>{var a=class{constructor({name:t}){this.name=t}};var x=class extends a{constructor(e){super({name:"ControlledBy"});this.controlledBy=e}};var R=(o,t,e)=>(o+(t-o))*e,l=o=>o<1e-5&&o>-1e-5;var z=(o,t,e)=>{let r=R(o.x,t.x,e),i=R(o.y,t.y,e);return{x:r,y:i}},I=(o,t)=>({x:o.x+t.x,y:o.y+t.y}),G=(o,t)=>({x:o.x*t,y:o.y*t}),U=({x:o,y:t})=>l(o)&&l(t);var h="Movement",g=class extends a{constructor({vector:e,maxSpeed:r}){super({name:h});this.acceleration={x:0,y:0};this.velocity={x:0,y:0};this.vector=e??{x:0,y:0},this.maxSpeed=r??2}updateSpeed(){if(l(this.vector.x)&&(this.velocity.x=0,this.acceleration.x=0),l(this.vector.y)&&(this.velocity.y=0,this.acceleration.y=0),U(this.vector))return;this.acceleration=I(this.acceleration,G(this.vector,.1)),this.velocity=z(this.velocity,I(this.velocity,this.acceleration),1);let e=this.maxSpeed*-1;this.velocity.x>this.maxSpeed?this.velocity.x=this.maxSpeed:this.velocity.x<e&&(this.velocity.x=e),this.velocity.y>this.maxSpeed?this.velocity.y=this.maxSpeed:this.velocity.y<e&&(this.velocity.y=e)}};var v=class extends a{constructor({r:e,g:r,b:i,a:n}){super({name:"Colour"});this.toRgb=()=>`rgb(${this.r}, ${this.g}, ${this.b}, ${this.a})`;this.r=e,this.g=r,this.b=i,this.a=n,this.toRgb=this.toRgb.bind(this)}};var m="Position",b=class extends a{constructor({x:e,y:r}){super({name:m});this.x=e??0,this.y=r??0}};var w=class extends a{constructor({width:e,height:r}){super({name:"Size"});this.width=e,this.height=r}};function*B(){yield new v({r:255,g:0,b:0,a:255}),yield new b({x:0,y:0}),yield new w({width:200,height:200})}var p=class{getAcceptedEntities(t){return $(t,this)}},$=function*(o,t){for(let e of o)t.accepts(e)&&(yield e)};var S=class extends p{constructor(e){super();this.webgl=e}accepts(e){return e.components.has("Size")&&e.components.has(m)&&e.components.has("Colour")}init(){}update({entities:e,systems:r}){this.webgl.startDraw();let i=this.getAcceptedEntities(e);for(let n of this.webgl.materials)n.startDraw(this.webgl.gl),n.draw(this.webgl.gl,i)}};var C=class extends p{constructor(){super();this.keyStates=new Map;this.init=this.init.bind(this),this.onKeyDown=this.onKeyDown.bind(this),this.onKeyUp=this.onKeyUp.bind(this)}accepts(e){let r=e.components.get("ControlledBy");return r?r.controlledBy=="Player"&&e.components.has(h):!1}init(){document.addEventListener("keydown",this.onKeyDown),document.addEventListener("keyup",this.onKeyUp)}update({entities:e}){for(let n of this.keyStates)n[1]=="Pressed"&&this.keyStates.set(n[0],"Held");let r=this.getAxisVector("ArrowRight","ArrowLeft"),i=this.getAxisVector("ArrowUp","ArrowDown");for(let n of this.getAcceptedEntities(e)){let s=n.components.get(h);s.vector.y=i,s.vector.x=r}}getAxisVector(e,r){let i=(this.keyStates.get(e)??"Released")!="Released"?1:0,n=(this.keyStates.get(r)??"Released")!="Released"?-1:0;return i+n}onKeyDown(e){this.keyStates.set(e.key,"Pressed")}onKeyUp(e){this.keyStates.set(e.key,"Released")}};var L=class extends p{accepts(t){return t.components.has(m)&&t.components.has(h)}init(){}update({entities:t}){for(let e of this.getAcceptedEntities(t)){let r=e.components.get(m),i=e.components.get(h);i.updateSpeed(),r.x+=i.acceleration.x,r.y+=i.acceleration.y}}};var W=class{constructor(){let t=document.querySelector("canvas");if(!t)throw"Could not find canvas";this._canvas=t,this._context=this._canvas.getContext("2d")}get canvas(){return this._canvas}get context(){return this._context}init(){this._canvas.width=window.innerWidth,this._canvas.height=window.innerHeight}clearCanvas(){this.context.clearRect(0,0,this.canvas.width,this.canvas.height)}},T=null,D=()=>(T||(T=new W),T);var E=class{constructor(){this.systems=[];this.entities=[];this.update=this.update.bind(this)}init(){D().init();for(let t of this.entities)t.init();for(let t of this.systems)t.init();window.requestAnimationFrame(this.update)}update(){for(let t of this.systems)t.update({entities:this.entities,systems:this.systems});console.log("ran update"),window.requestAnimationFrame(this.update)}};var _=class{constructor(){this.components=new Map}add(t){this.components.set(t.name,t)}get(t){let e=this.components.get(t);if(e)return e}has(t){return this.components.has(t)}all(){return this.components.values()}};var V=class{constructor(){this.components=new _;this.name=""}init(){for(let t of this.components.all())console.log(t);console.log("initialised",this)}};var K=o=>{let t=window.devicePixelRatio,{width:e,height:r}=o.getBoundingClientRect(),i=Math.round(e*t),n=Math.round(r*t),s=o.width!=i||o.height!=n;return s&&(o.width=i,o.height=n),s};var P=class{constructor({canvas:t,materials:e}){this.materials=[];this.canvas=t;let r=t.getContext("webgl2");if(!r)throw"Could not find WebGL2 context";this.gl=r,this.materials=e}init(){for(let t of this.materials)t.create(this.gl)}startDraw(){K(this.gl.canvas),this.gl.viewport(0,0,this.gl.canvas.width,this.gl.canvas.height),this.gl.clearColor(0,0,0,0),this.gl.clear(this.gl.COLOR_BUFFER_BIT)}};var A=class{constructor({fragmentShader:t,name:e,vertexShader:r,variables:i}){if(!t||!r||!i||!e)throw"Shaders must exist";this.fragmentShader=t,this.vertexShader=r,this.variables=i,this.name=e}get colourLocation(){return this._colourLocation||(this._colourLocation=this.variables.find(t=>t.name==0)?.location),this._colourLocation}get positionLocation(){if(!this._positionLocation){let t=this.variables.find(e=>e.name==1);if(!t)return;this._positionLocation=t.location}return this._positionLocation}get resolutionLocation(){return this._resolutionLocation||(this._resolutionLocation=this.variables.find(t=>t.name==2)?.location),this._resolutionLocation}create(t){this._createProgram(t),this._findVarLocations(t)}startDraw(t){let e=t.createBuffer(),r=t.createVertexArray();t.bindVertexArray(r),t.enableVertexAttribArray(this.positionLocation),t.bindBuffer(t.ARRAY_BUFFER,e);let i=2,n=t.FLOAT,s=!1,c=0,y=0;t.vertexAttribPointer(this.positionLocation,i,n,s,c,y),t.useProgram(this._program),t.bindVertexArray(r),t.uniform2f(this.resolutionLocation,t.canvas.width,t.canvas.height)}draw(t,e){for(let s of e){let c=s.components.get("Size"),y=s.components.get(m),M=s.components.get("Colour"),O=q(y.x,y.y,c.width,c.height);t.bufferData(t.ARRAY_BUFFER,O,t.STATIC_DRAW),t.uniform4f(this.colourLocation,M.r,M.g,M.b,1);var r=t.TRIANGLES,i=0,n=6;t.drawArrays(r,i,n)}}_createProgram(t){let e=t.createProgram();if(!e)throw"Error creating program";if(t.attachShader(e,this.vertexShader.compileShader(t)),t.attachShader(e,this.fragmentShader.compileShader(t)),t.linkProgram(e),t.getProgramParameter(e,t.LINK_STATUS))return this._program=e,e;let r=t.getProgramInfoLog(e);throw t.deleteProgram(e),r}_findVarLocations(t){for(let e of this.variables)if(e.type=="Uniform"){if(e.location=t.getUniformLocation(this._program,e.fieldName)??void 0,!e.location)throw`Error fetching uniform ${e.fieldName}`}else if(e.type=="Attribute"&&(e.location=t.getAttribLocation(this._program,e.fieldName)??void 0,e.location<0))throw`Error fetching attribute ${e.fieldName}`}};var q=(o,t,e,r)=>{let i=o,n=o+e,s=t,c=t+r;return new Float32Array([i,s,n,s,i,c,i,c,n,s,n,c])};var d=class{constructor({source:t,type:e}){if(!t)throw"Source cannot be null";if(!e)throw"Type cannot be null";this.source=t,this.type=e}get compiledShader(){return this._compiledShader}compileShader(t){let e=t.createShader(this.type);if(!e)throw"Error creating shader";if(t.shaderSource(e,this.source),t.compileShader(e),t.getShaderParameter(e,t.COMPILE_STATUS))return this._compiledShader=e,e;let r=t.getShaderInfoLog(e);throw t.deleteShader(e),r}};var J=`#version 300 es
     
// fragment shaders don't have a default precision so we need
// to pick one. highp is a good default. It means "high precision"
precision highp float;
 
uniform vec4 u_colour;

// we need to declare an output for the fragment shader
out vec4 outColour;
 
void main() {
  // Just set the output to a constant reddish-purple
  outColour = u_colour;
}`,N=new d({source:J,type:35632});var Q=`#version 300 es
 
// an attribute is an input (in) to a vertex shader.
// It will receive data from a buffer
in vec2 a_position;
 
uniform vec2 u_resolution; 
// all shaders have a main function
void main() {
  // convert the position from pixels to 0.0 to 1.0
  vec2 zeroToOne = a_position / u_resolution;

  // convert from 0->1 to 0->2
  vec2 zeroToTwo = zeroToOne * 2.0;

  // convert from 0->2 to -1->+1 (clip space)
  vec2 clipSpace = zeroToTwo - 1.0;

  // gl_Position is a special variable a vertex shader
  // is responsible for setting
  gl_Position = vec4(clipSpace, 0, 1);
}`,F=new d({source:Q,type:35633});var k=document.getElementById("canvas");if(!k)throw"Couldn;'t find canvas";var j=[new A({fragmentShader:N,name:"Main",vertexShader:F,variables:[{name:1,fieldName:"a_position",type:"Attribute"},{name:0,fieldName:"u_colour",type:"Uniform"},{name:2,fieldName:"u_resolution",type:"Uniform"}]})],H=new P({canvas:k,materials:j});H.init();var u=new V;u.name="Player";for(let o of B())u.components.add(o);u.components.add(new g({}));u.components.add(new x("Player"));var f=new E;f.entities.push(u);f.systems.push(new C);f.systems.push(new L);f.systems.push(new S(H));f.init();})();
//# sourceMappingURL=g.js.map
